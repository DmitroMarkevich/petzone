name: PetZone deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            set -e

             cd ${{ vars.PROJECT_PATH }}

             # Update code
             git fetch origin main
             git reset --hard origin/main

            # Check if composer.lock changed
             if ! docker compose exec -T app composer check-platform-reqs > /dev/null 2>&1; then
               echo "Installing PHP dependencies..."
               docker compose run --rm app composer install --no-dev --optimize-autoloader --no-interaction
             fi

             # Check if package-lock.json changed
             if [ -f "package-lock.json" ] && ! cmp -s package-lock.json.old package-lock.json 2>/dev/null; then
               echo "Installing Node dependencies..."
               docker compose run --rm app npm ci --silent
               cp package-lock.json package-lock.json.old
             fi

             # Check if assets changed
             if [ -d "resources" ]; then
               echo "Building assets..."
               docker compose run --rm app npm run build
             fi

             docker compose exec -T app php artisan optimize:clear

             # Graceful restart
             echo "Restarting containers..."
             docker compose up -d --no-deps app

             # Migrations
             docker compose exec -T app php artisan migrate --force

             # Optimize after deploy
             docker compose exec -T app php artisan optimize

             echo "PetZone deploy was successful"
